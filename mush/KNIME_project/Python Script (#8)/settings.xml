<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="# Do pandas inner join%%00010output_table_1 = input_table_2.copy()%%00010output_table_2 = input_table_2.copy()%%00010%%00010%%00010for row in input_table_2:%%00010%%00009print(row)%%00010%%00009dict = input_table_1.loc[input_table_1['Column'] == row]%%00010%%00009keyList = dict.key.tolist()%%00010%%00009valList = dict.val.tolist()%%00010%%00009print(keyList)%%00010%%00009print(valList)%%00010%%00009rep = {k: v for k, v in zip(keyList, valList)}%%00010%%00009print(rep)%%00010%%00009output_table_1[row] = output_table_1[row].map(rep)%%00010print(output_table_1)%%00010%%00010for row in input_table_2:%%00010%%00009print(row)%%00010%%00009dict = input_table_1.loc[input_table_1['Column'] == row]%%00010%%00009#print(dict)%%00010%%00009keyList = dict.key.tolist()%%00010%%00009valList = dict.name.tolist()%%00010%%00009print(keyList)%%00010%%00009print(valList)%%00010%%00009rep = {k: v for k, v in zip(keyList, valList)}%%00010%%00009print(rep)%%00010%%00009print(output_table_2[row])%%00010%%00009output_table_2[row] = output_table_2[row].map(rep)%%00010%%00009print(output_table_2[row])%%00010print(output_table_2)"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="python3"/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="dialog_was_opened" type="xboolean" value="true"/>
<entry key="python3Command" type="xstring" value=""/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<config key="nodecontainer_message">
<entry key="type" type="xstring" value="ERROR"/>
<entry key="message" type="xstring" value="Execute failed: Could not start Python kernel. Error during Python installation test: Could not start Python executable at the given location (no_conda_environment_selected\python.exe): Cannot run program &quot;no_conda_environment_selected\python.exe&quot;: CreateProcess error=2, The system cannot find the file specified"/>
</config>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script2.Python2ScriptNodeFactory2"/>
<entry key="node-name" type="xstring" value="Python Script"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.3.2.v202103021016"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.3.2.v202103021016"/>
<config key="factory_settings"/>
<config key="node_creation_config">
<config key="Input object (pickled)"/>
<config key="Input table">
<config key="port_0">
<entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
</config>
<config key="port_1">
<entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
</config>
</config>
<config key="Output table">
<config key="port_0">
<entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
</config>
<config key="port_1">
<entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
</config>
</config>
<config key="Output image"/>
<config key="Output object (pickled)"/>
</config>
<entry key="name" type="xstring" value="Python Script"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
<config key="port_2">
<entry key="index" type="xint" value="2"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
